version: '3.8'

services:

  # KEYCLOACK
  postgres:
    container_name: postgres
    image: postgres:13
    volumes:
      - "/.data/keycloak-postgres:/var/lib/postgresql/data:rw"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: keycloak_db
    ports:
      - "5435:5432"
    command: -p 5435
    #restart: unless-stopped
    networks:
      - keycloak-net

  keycloak:
    image: jboss/keycloak:16.1.1
    container_name: keycloak
    environment:
      DB_VENDOR: POSTGRES
      DB_ADDR: "postgres:5435"
      DB_DATABASE: keycloak_db
      DB_USER: postgres
      DB_PASSWORD: postgres
      KEYCLOAK_USER: admin
      KEYCLOAK_PASSWORD: admin_password
      PROXY_ADDRESS_FORWARDING: "true"
    volumes:
      - "./.data/keycloak:/var/lib/keycloak/data"
      - "./config/keycloak/genappline-realm.json:/opt/jboss/keycloak/genappline-realm.json"
    ports:
      - "8484:8484"
    expose:
      - 8484
    command:
      - "-b 0.0.0.0"
      - "-Djboss.http.port=8484"
      - "-Dkeycloak.import=/opt/jboss/keycloak/genappline-realm.json"
    depends_on:
      - postgres
    networks:
      - keycloak-net

  # METRICS
  grafana:
    build: './config/grafana'
    container_name: grafana
    ports:
      - 3000:3000
    volumes:
      - ./.data/grafana:/var/lib/grafana
    environment:
      GF_SECURITY_ADMIN_USER: "admin"
      GF_SECURITY_ADMIN_PASSWORD: "admin"
      GF_SMTP_ENABLED: "true"
      GF_SMTP_HOST: "smtp.gmail.com:587"
      GF_SMTP_USER: "art.master.app@gmail.com"
      GF_SMTP_PASSWORD: "dsf7376Go7289904"
      GF_SMTP_SKIP_VERIFY: "true"
      GF_SMTP_FROM_ADDRESS: "art.master.app@gmail.com"
    networks:
      monitoring:
        aliases:
          - grafana
  prometheus:
    image: prom/prometheus
    container_name: prometheus
    ports:
      - 9090:9090
    volumes:
      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./.data/prometheus:/prometheus
    networks:
      monitoring:
        aliases:
          - prometheus
  jaeger:
    image: jaegertracing/all-in-one:1.35
    container_name: jaeger
    ports:
      - 6831:6831/udp
      - 6832:6832/udp
      - 16686:16686
      - 14268:14268

  opensearch:
    image: opensearchproject/opensearch:2.0.0
    container_name: opensearch
    environment:
      discovery.type: single-node
      bootstrap.memory_lock: "true" # along with the memlock settings below, disables swapping
      plugins.security.ssl.http.enabled: "false"
      OPENSEARCH_JAVA_OPTS: "-Xms4g -Xmx4g" # minimum and maximum Java heap size, recommend setting both to 50% of system RAM
    volumes:
      - ./.data/opensearch-data:/usr/share/opensearch/data
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536 # maximum number of open files for the OpenSearch user, set to at least 65536 on modern systems
        hard: 65536
    ports:
      - 9200:9200
      - 9600:9600 # required for Performance Analyzer
    networks:
      - opensearch-net

  opensearch-dashboards:
    image: opensearchproject/opensearch-dashboards:2.0.0
    container_name: opensearch-dashboards
    environment:
      # if use https then boards do not starting. Need additional settings
      OPENSEARCH_HOSTS: '["http://opensearch:9200"]'
    ports:
      - 5601:5601
    expose:
      - "5601"
    networks:
      - opensearch-net
    depends_on:
      - opensearch

  # Logstash with plugin for opensearch
  logstash:
    image: opensearchproject/logstash-oss-with-opensearch-output-plugin:7.16.3
    container_name: logstash
    #command: logstash -f /etc/logstash/conf.d/gateway_pipeline.conf
    volumes:
      - ./config/logstash/logstash.conf:/usr/share/logstash/pipeline/logstash.conf
      - ./config/logstash/logstash.template.json:/usr/share/logstash/templates/logstash.template.json
    ports:
      - "5044:5044"
    environment:
      PATH_CONFIG: "/usr/share/logstash/pipeline/*.conf"
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"
    networks:
      - opensearch-net
    depends_on:
      - opensearch

  # Filebeat. One for all docker containers
  filebeat:
    image: elastic/filebeat:8.2.2
    container_name: filebeat
    # suppress container permission error
    command: filebeat -e -strict.perms=false
    volumes:
      - ./config/filebeat.docker.yml:/usr/share/filebeat/filebeat.yml:ro   # Configuration file ":ro" is read only mount
      - /var/lib/docker/containers:/var/lib/docker/containers:ro           # Docker logs
      - /var/run/docker.sock:/var/run/docker.sock:ro                       # Additional information about containers
    user: root                                                             # Allow access to log files and docker.sock
    restart: on-failure
    depends_on:
      - logstash
    networks:
      - opensearch-net
  #Own services
  gateway:
    build: ../gateway/.
    image: gateway
    container_name: gateway
    restart: on-failure
    ports:
      - 8090:8090
    expose:
      - "8090"
    environment:
      - APP_PORT=${APP_PORT}
      - TREE_DATA_SERVICE_ADDR=${TREE_DATA_SERVICE_ADDR}
      - KEYCLOAK_ADDR=${KEYCLOAK_ADDR}
      - KEYCLOAK_HOST=keycloak
      - KEYCLOAK_PORT=${KEYCLOAK_PORT}
    depends_on:
      - keycloak
    networks:
      - keycloak-net
      - opensearch-net

volumes:
  postgres:
  keycloak:

networks:
  keycloak-net:
    driver: bridge
  opensearch-net:
    driver: bridge
  monitoring: